<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFAbstractPasscodeViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFAbstractPasscodeViewController</TokenIdentifier>
			<Abstract type="html">Base class for passcode screen view controllers.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/setMinPasscodeLength:</TokenIdentifier>
			<Abstract type="html">The minimum passcode length, which this view controller will enforce.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger minPasscodeLength</Declaration>
			
			
			<Anchor>//api/name/minPasscodeLength</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/minPasscodeLength</TokenIdentifier>
			<Abstract type="html">The minimum passcode length, which this view controller will enforce.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger minPasscodeLength</Declaration>
			
			
			<Anchor>//api/name/minPasscodeLength</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFAbstractPasscodeViewController/minPasscodeLength</TokenIdentifier>
			<Abstract type="html">The minimum passcode length, which this view controller will enforce.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger minPasscodeLength</Declaration>
			
			
			<Anchor>//api/name/minPasscodeLength</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/setMode:</TokenIdentifier>
			<Abstract type="html">Whether or not this controller is in a passcode creation or verification mode.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) SFPasscodeControllerMode mode</Declaration>
			
			
			<Anchor>//api/name/mode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/mode</TokenIdentifier>
			<Abstract type="html">Whether or not this controller is in a passcode creation or verification mode.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) SFPasscodeControllerMode mode</Declaration>
			
			
			<Anchor>//api/name/mode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFAbstractPasscodeViewController/mode</TokenIdentifier>
			<Abstract type="html">Whether or not this controller is in a passcode creation or verification mode.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) SFPasscodeControllerMode mode</Declaration>
			
			
			<Anchor>//api/name/mode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/setRemainingAttempts:</TokenIdentifier>
			<Abstract type="html">The number of attempts left to successfully verify the passcode, before the user is logged out.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger remainingAttempts</Declaration>
			
			
			<Anchor>//api/name/remainingAttempts</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/remainingAttempts</TokenIdentifier>
			<Abstract type="html">The number of attempts left to successfully verify the passcode, before the user is logged out.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger remainingAttempts</Declaration>
			
			
			<Anchor>//api/name/remainingAttempts</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFAbstractPasscodeViewController/remainingAttempts</TokenIdentifier>
			<Abstract type="html">The number of attempts left to successfully verify the passcode, before the user is logged out.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>@property (readonly) NSInteger remainingAttempts</Declaration>
			
			
			<Anchor>//api/name/remainingAttempts</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/initWithMode:minPasscodeLength:</TokenIdentifier>
			<Abstract type="html">Designated initializer for SFAbstractPasscodeViewController.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>- (id)initWithMode:(SFPasscodeControllerMode)mode minPasscodeLength:(NSInteger)minPasscodeLength</Declaration>
			<Parameters>
				<Parameter>
					<Name>mode</Name>
					<Abstract type="html">The mode of the passcode screen, either passcode creation or passcode verification.</Abstract>
				</Parameter><Parameter>
					<Name>minPasscodeLength</Name>
					<Abstract type="html">The minimum number of characters the passcode must contain.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithMode:minPasscodeLength:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/createPasscodeConfirmed:</TokenIdentifier>
			<Abstract type="html">Method to be called after the creation of the passcode is confirmed to be successful.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>- (void)createPasscodeConfirmed:(NSString *)newPasscode</Declaration>
			<Parameters>
				<Parameter>
					<Name>newPasscode</Name>
					<Abstract type="html">The created passcode, which will be stored and managed by the SDK.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createPasscodeConfirmed:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/validatePasscodeConfirmed:</TokenIdentifier>
			<Abstract type="html">Method to be called after passcode validation is confirmed to be successful.  This will reset the
passcode logic, unlock the screen, and send the app into its subsequent unlocked behavior.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>- (void)validatePasscodeConfirmed:(NSString *)validPasscode</Declaration>
			<Parameters>
				<Parameter>
					<Name>validPasscode</Name>
					<Abstract type="html">The successfully validated passcode.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/validatePasscodeConfirmed:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/decrementPasscodeAttempts</TokenIdentifier>
			<Abstract type="html">Method to be called after an attempt to validate the passcode has failed, decrementing the number
of attempts, and initiating the ultimate failure logic of validatePasscodeFailed if no attempts
remain.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>- (BOOL)decrementPasscodeAttempts</Declaration>
			
			<ReturnValue><Abstract type="html">YES if there are remaining attempts available to validate the passcode.  NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/decrementPasscodeAttempts</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFAbstractPasscodeViewController/validatePasscodeFailed</TokenIdentifier>
			<Abstract type="html">Method to be called if all allowed attempts to validate the passcode have failed.  The method
decrementPasscodeAttempts will call this method automatically, so inheriting classes do not
need to do so.</Abstract>
			<DeclaredIn>SFAbstractPasscodeViewController.h</DeclaredIn>
			
			<Declaration>- (void)validatePasscodeFailed</Declaration>
			
			
			<Anchor>//api/name/validatePasscodeFailed</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
	</File>
</Tokens>