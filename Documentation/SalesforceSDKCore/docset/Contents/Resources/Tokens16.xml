<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFIdentityCoordinator.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFIdentityCoordinator</TokenIdentifier>
			<Abstract type="html">The SFIdentityCoordinator class is used to retrieve identity data from the ID endpoint of the
Salesforce service.  This data will be based on the requesting user, and the OAuth app
credentials he/she is using to request this information.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/initWithCredentials:</TokenIdentifier>
			<Abstract type="html">The designated initializer of SFIdentityCoordinator.  Creates an instance with the specified
OAuth credentials.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>- (id)initWithCredentials:(SFOAuthCredentials *)credentials</Declaration>
			<Parameters>
				<Parameter>
					<Name>credentials</Name>
					<Abstract type="html">The OAuth credentials used to query the identity service.  At a minimum,
the OAuth credentials must specify a value for accessToken and instanceUrl.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithCredentials:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/initiateIdentityDataRetrieval</TokenIdentifier>
			<Abstract type="html">Begins the identity request.  This request is asynchronous.  Implement the
SFIdentityCoordinatorDelegate protocol to receive events related to the identity response from
the service.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>- (void)initiateIdentityDataRetrieval</Declaration>
			
			
			<Anchor>//api/name/initiateIdentityDataRetrieval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/cancelRetrieval</TokenIdentifier>
			<Abstract type="html">Cancels a request in progress.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>- (void)cancelRetrieval</Declaration>
			
			
			<Anchor>//api/name/cancelRetrieval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setCredentials:</TokenIdentifier>
			<Abstract type="html">The OAuth credentials associated with this instance.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFOAuthCredentials *credentials</Declaration>
			
			
			<Anchor>//api/name/credentials</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/credentials</TokenIdentifier>
			<Abstract type="html">The OAuth credentials associated with this instance.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFOAuthCredentials *credentials</Declaration>
			
			
			<Anchor>//api/name/credentials</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/credentials</TokenIdentifier>
			<Abstract type="html">The OAuth credentials associated with this instance.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFOAuthCredentials *credentials</Declaration>
			
			
			<Anchor>//api/name/credentials</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setIdData:</TokenIdentifier>
			<Abstract type="html">The SFIdentityData that will be populated with the response data from the service.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFIdentityData *idData</Declaration>
			
			
			<Anchor>//api/name/idData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/idData</TokenIdentifier>
			<Abstract type="html">The SFIdentityData that will be populated with the response data from the service.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFIdentityData *idData</Declaration>
			
			
			<Anchor>//api/name/idData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/idData</TokenIdentifier>
			<Abstract type="html">The SFIdentityData that will be populated with the response data from the service.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFIdentityData *idData</Declaration>
			
			
			<Anchor>//api/name/idData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setDelegate:</TokenIdentifier>
			<Abstract type="html">The SFIdentityCoordinatorDelegate property to set for receiving information about the request.
This property must be set prior to initiating an identity request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFIdentityCoordinatorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/delegate</TokenIdentifier>
			<Abstract type="html">The SFIdentityCoordinatorDelegate property to set for receiving information about the request.
This property must be set prior to initiating an identity request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFIdentityCoordinatorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/delegate</TokenIdentifier>
			<Abstract type="html">The SFIdentityCoordinatorDelegate property to set for receiving information about the request.
This property must be set prior to initiating an identity request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFIdentityCoordinatorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setTimeout:</TokenIdentifier>
			<Abstract type="html">The amount of time, in seconds, to attempt the request, before it times out.  If not set, the
default value is represented by the kSFIdentityRequestDefaultTimeoutSeconds property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/timeout</TokenIdentifier>
			<Abstract type="html">The amount of time, in seconds, to attempt the request, before it times out.  If not set, the
default value is represented by the kSFIdentityRequestDefaultTimeoutSeconds property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/timeout</TokenIdentifier>
			<Abstract type="html">The amount of time, in seconds, to attempt the request, before it times out.  If not set, the
default value is represented by the kSFIdentityRequestDefaultTimeoutSeconds property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setResponseData:</TokenIdentifier>
			<Abstract type="html">The data from the service response will be populated here.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSMutableData *responseData</Declaration>
			
			
			<Anchor>//api/name/responseData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/responseData</TokenIdentifier>
			<Abstract type="html">The data from the service response will be populated here.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSMutableData *responseData</Declaration>
			
			
			<Anchor>//api/name/responseData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/responseData</TokenIdentifier>
			<Abstract type="html">The data from the service response will be populated here.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSMutableData *responseData</Declaration>
			
			
			<Anchor>//api/name/responseData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setRetrievingData:</TokenIdentifier>
			<Abstract type="html">Whether or not a request is already in progress.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (assign) BOOL retrievingData</Declaration>
			
			
			<Anchor>//api/name/retrievingData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/retrievingData</TokenIdentifier>
			<Abstract type="html">Whether or not a request is already in progress.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (assign) BOOL retrievingData</Declaration>
			
			
			<Anchor>//api/name/retrievingData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/retrievingData</TokenIdentifier>
			<Abstract type="html">Whether or not a request is already in progress.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (assign) BOOL retrievingData</Declaration>
			
			
			<Anchor>//api/name/retrievingData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setConnection:</TokenIdentifier>
			<Abstract type="html">The NSURLConnection associated with the ID request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSURLConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/connection</TokenIdentifier>
			<Abstract type="html">The NSURLConnection associated with the ID request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSURLConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/connection</TokenIdentifier>
			<Abstract type="html">The NSURLConnection associated with the ID request.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSURLConnection *connection</Declaration>
			
			
			<Anchor>//api/name/connection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setTypeToCodeDict:</TokenIdentifier>
			<Abstract type="html">Dictionary mapping error codes to their respective types.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic, readonly) NSDictionary *typeToCodeDict</Declaration>
			
			
			<Anchor>//api/name/typeToCodeDict</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/typeToCodeDict</TokenIdentifier>
			<Abstract type="html">Dictionary mapping error codes to their respective types.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic, readonly) NSDictionary *typeToCodeDict</Declaration>
			
			
			<Anchor>//api/name/typeToCodeDict</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/typeToCodeDict</TokenIdentifier>
			<Abstract type="html">Dictionary mapping error codes to their respective types.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (strong, nonatomic, readonly) NSDictionary *typeToCodeDict</Declaration>
			
			
			<Anchor>//api/name/typeToCodeDict</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/setHttpError:</TokenIdentifier>
			<Abstract type="html">If there&apos;s an error in the HTTP transaction, set it in this property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSError *httpError</Declaration>
			
			
			<Anchor>//api/name/httpError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/httpError</TokenIdentifier>
			<Abstract type="html">If there&apos;s an error in the HTTP transaction, set it in this property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSError *httpError</Declaration>
			
			
			<Anchor>//api/name/httpError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFIdentityCoordinator/httpError</TokenIdentifier>
			<Abstract type="html">If there&apos;s an error in the HTTP transaction, set it in this property.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSError *httpError</Declaration>
			
			
			<Anchor>//api/name/httpError</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/notifyDelegateOfSuccess</TokenIdentifier>
			<Abstract type="html">Triggers the success notifictation to the delegate.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)notifyDelegateOfSuccess</Declaration>
			
			
			<Anchor>//api/name/notifyDelegateOfSuccess</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/notifyDelegateOfFailure:</TokenIdentifier>
			<Abstract type="html">Triggers the failure notification and error to the delegate.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)notifyDelegateOfFailure:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/notifyDelegateOfFailure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/processResponse</TokenIdentifier>
			<Abstract type="html">Process a completed response from the service, populating the ID data.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)processResponse</Declaration>
			
			
			<Anchor>//api/name/processResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/cleanupData</TokenIdentifier>
			<Abstract type="html">Cleans up the in-process properties and vars, once a request is completed.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)cleanupData</Declaration>
			
			
			<Anchor>//api/name/cleanupData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFIdentityCoordinator/errorWithType:description:</TokenIdentifier>
			<Abstract type="html">Creates an NSError instance based on type and description, for notifying the delegate
of a failure.</Abstract>
			<DeclaredIn>SFIdentityCoordinator+Internal.h</DeclaredIn>			
			
			<Declaration>- (NSError *)errorWithType:(NSString *)type description:(NSString *)description</Declaration>
			
			
			<Anchor>//api/name/errorWithType:description:</Anchor>
		</Token>
		
	</File>
</Tokens>