<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CSFNetwork.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CSFNetwork</TokenIdentifier>
			<Abstract type="html">This is the scheduler and network dispatch class for managing a series of network operations
on behalf of an application.  Each instance is bound to an individual user account, and manages
the OAuth2 token refresh, queueing and scheduling of network operations, handling the parsing
of responses, and aggregation of common actions into batches.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
            
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setEphemeralSession:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) NSURLSession *ephemeralSession</Declaration>
			
			
			<Anchor>//api/name/ephemeralSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/ephemeralSession</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) NSURLSession *ephemeralSession</Declaration>
			
			
			<Anchor>//api/name/ephemeralSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/ephemeralSession</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) NSURLSession *ephemeralSession</Declaration>
			
			
			<Anchor>//api/name/ephemeralSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setNetworkSuspended:</TokenIdentifier>
			<Abstract type="html">Indicates whether the network operation queue is suspended or not.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isNetworkSuspended) BOOL networkSuspended</Declaration>
			
			
			<Anchor>//api/name/networkSuspended</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/isNetworkSuspended</TokenIdentifier>
			<Abstract type="html">Indicates whether the network operation queue is suspended or not.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isNetworkSuspended) BOOL networkSuspended</Declaration>
			
			
			<Anchor>//api/name/networkSuspended</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/networkSuspended</TokenIdentifier>
			<Abstract type="html">Indicates whether the network operation queue is suspended or not.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isNetworkSuspended) BOOL networkSuspended</Declaration>
			
			
			<Anchor>//api/name/networkSuspended</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setOnline:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isOnline) BOOL online</Declaration>
			
			
			<Anchor>//api/name/online</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/isOnline</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isOnline) BOOL online</Declaration>
			
			
			<Anchor>//api/name/online</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/online</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isOnline) BOOL online</Declaration>
			
			
			<Anchor>//api/name/online</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setActionCount:</TokenIdentifier>
			<Abstract type="html">The count of network requests currently queued for processing.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger actionCount</Declaration>
			
			
			<Anchor>//api/name/actionCount</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/actionCount</TokenIdentifier>
			<Abstract type="html">The count of network requests currently queued for processing.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger actionCount</Declaration>
			
			
			<Anchor>//api/name/actionCount</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/actionCount</TokenIdentifier>
			<Abstract type="html">The count of network requests currently queued for processing.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger actionCount</Declaration>
			
			
			<Anchor>//api/name/actionCount</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setAccount:</TokenIdentifier>
			<Abstract type="html">The user account instance this CSFNetwork represents.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFUserAccount *account</Declaration>
			
			
			<Anchor>//api/name/account</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/account</TokenIdentifier>
			<Abstract type="html">The user account instance this CSFNetwork represents.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFUserAccount *account</Declaration>
			
			
			<Anchor>//api/name/account</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/account</TokenIdentifier>
			<Abstract type="html">The user account instance this CSFNetwork represents.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFUserAccount *account</Declaration>
			
			
			<Anchor>//api/name/account</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setRefreshingAccessToken:</TokenIdentifier>
			<Abstract type="html">Indicates if the access token for this user account is being refreshed.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/networkSuspended</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (atomic, readonly, getter=isRefreshingAccessToken) BOOL refreshingAccessToken</Declaration>
			
			
			<Anchor>//api/name/refreshingAccessToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/isRefreshingAccessToken</TokenIdentifier>
			<Abstract type="html">Indicates if the access token for this user account is being refreshed.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/networkSuspended</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (atomic, readonly, getter=isRefreshingAccessToken) BOOL refreshingAccessToken</Declaration>
			
			
			<Anchor>//api/name/refreshingAccessToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/refreshingAccessToken</TokenIdentifier>
			<Abstract type="html">Indicates if the access token for this user account is being refreshed.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/networkSuspended</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (atomic, readonly, getter=isRefreshingAccessToken) BOOL refreshingAccessToken</Declaration>
			
			
			<Anchor>//api/name/refreshingAccessToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setProgress:</TokenIdentifier>
			<Abstract type="html">Reports aggregated progress information for all actions currently enqueued in this network instance.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSProgress *progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/progress</TokenIdentifier>
			<Abstract type="html">Reports aggregated progress information for all actions currently enqueued in this network instance.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSProgress *progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/progress</TokenIdentifier>
			<Abstract type="html">Reports aggregated progress information for all actions currently enqueued in this network instance.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSProgress *progress</Declaration>
			
			
			<Anchor>//api/name/progress</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSFNetwork/currentNetwork</TokenIdentifier>
			<Abstract type="html">Returns the network instance for the currently active user account.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/CSFNetwork/networkForUserAccount:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (instancetype)currentNetwork</Declaration>
			
			
			<Anchor>//api/name/currentNetwork</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSFNetwork/networkForUserAccount:</TokenIdentifier>
			<Abstract type="html">Returns a reference to the shared instance of this class for the supplied user.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/CSFNetwork/currentNetwork</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (instancetype)networkForUserAccount:(SFUserAccount *)account</Declaration>
			
			
			<Anchor>//api/name/networkForUserAccount:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/executeAction:</TokenIdentifier>
			<Abstract type="html">Schedules and executes the supplied action on this network stack.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)executeAction:(CSFAction *)action</Declaration>
			
			
			<Anchor>//api/name/executeAction:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/executeActions:completionBlock:</TokenIdentifier>
			<Abstract type="html">Executes each action in the array of actions, used for batch mode.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)executeActions:(NSArray *)actions completionBlock:(void ( ^ ) ( NSArray *actions , NSArray *errors ))completionBlock</Declaration>
			
			
			<Anchor>//api/name/executeActions:completionBlock:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/cancelAllActions</TokenIdentifier>
			<Abstract type="html">Cancel all operations.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)cancelAllActions</Declaration>
			
			
			<Anchor>//api/name/cancelAllActions</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/cancelAllActionsWithContext:</TokenIdentifier>
			<Abstract type="html">Cancel all operations matching the given context instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/CSFAction/context</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)cancelAllActionsWithContext:(id)context</Declaration>
			
			
			<Anchor>//api/name/cancelAllActionsWithContext:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/actionsWithContext:</TokenIdentifier>
			<Abstract type="html">Returns a set of enqueued operations that have the given context.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/CSFAction/context</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (NSArray *)actionsWithContext:(id)context</Declaration>
			
			
			<Anchor>//api/name/actionsWithContext:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setSecurityToken:</TokenIdentifier>
			<Abstract type="html">Cross-site Request Forgery (CSRF) token provided in each server response and required for all Push API
requests that change state (i.e. POST).</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *securityToken</Declaration>
			
			
			<Anchor>//api/name/securityToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/securityToken</TokenIdentifier>
			<Abstract type="html">Cross-site Request Forgery (CSRF) token provided in each server response and required for all Push API
requests that change state (i.e. POST).</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *securityToken</Declaration>
			
			
			<Anchor>//api/name/securityToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/securityToken</TokenIdentifier>
			<Abstract type="html">Cross-site Request Forgery (CSRF) token provided in each server response and required for all Push API
requests that change state (i.e. POST).</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *securityToken</Declaration>
			
			
			<Anchor>//api/name/securityToken</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/addDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)addDelegate:(id&lt;CSFNetworkDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/addDelegate:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/removeDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)removeDelegate:(id&lt;CSFNetworkDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/removeDelegate:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setCancelling:</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is cancelling execution of actions.
This prevents new actions from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL cancelling</Declaration>
			
			
			<Anchor>//api/name/cancelling</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/cancelling</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is cancelling execution of actions.
This prevents new actions from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL cancelling</Declaration>
			
			
			<Anchor>//api/name/cancelling</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/cancelling</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is cancelling execution of actions.
This prevents new actions from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL cancelling</Declaration>
			
			
			<Anchor>//api/name/cancelling</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setPausing:</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is pausing execution of actions.
This prevents new action from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL pausing</Declaration>
			
			
			<Anchor>//api/name/pausing</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/pausing</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is pausing execution of actions.
This prevents new action from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL pausing</Declaration>
			
			
			<Anchor>//api/name/pausing</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/pausing</TokenIdentifier>
			<Abstract type="html">Property set to YES when the executer is pausing execution of actions.
This prevents new action from be scheduled.</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL pausing</Declaration>
			
			
			<Anchor>//api/name/pausing</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setQueue:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSOperationQueue *queue</Declaration>
			
			
			<Anchor>//api/name/queue</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/queue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSOperationQueue *queue</Declaration>
			
			
			<Anchor>//api/name/queue</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/queue</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSOperationQueue *queue</Declaration>
			
			
			<Anchor>//api/name/queue</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setBackgroundSession:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURLSession *backgroundSession</Declaration>
			
			
			<Anchor>//api/name/backgroundSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/backgroundSession</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURLSession *backgroundSession</Declaration>
			
			
			<Anchor>//api/name/backgroundSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/backgroundSession</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURLSession *backgroundSession</Declaration>
			
			
			<Anchor>//api/name/backgroundSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setUserAgent:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/userAgent</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/userAgent</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *userAgent</Declaration>
			
			
			<Anchor>//api/name/userAgent</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setOutputCachePointers:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSPointerArray *outputCachePointers</Declaration>
			
			
			<Anchor>//api/name/outputCachePointers</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/outputCachePointers</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSPointerArray *outputCachePointers</Declaration>
			
			
			<Anchor>//api/name/outputCachePointers</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/outputCachePointers</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSPointerArray *outputCachePointers</Declaration>
			
			
			<Anchor>//api/name/outputCachePointers</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setCacheIsConfigured:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=hasCacheBeenConfigured) BOOL cacheIsConfigured</Declaration>
			
			
			<Anchor>//api/name/cacheIsConfigured</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/hasCacheBeenConfigured</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=hasCacheBeenConfigured) BOOL cacheIsConfigured</Declaration>
			
			
			<Anchor>//api/name/cacheIsConfigured</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/cacheIsConfigured</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=hasCacheBeenConfigured) BOOL cacheIsConfigured</Declaration>
			
			
			<Anchor>//api/name/cacheIsConfigured</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/initWithUserAccount:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (id)initWithUserAccount:(SFUserAccount *)account</Declaration>
			
			
			<Anchor>//api/name/initWithUserAccount:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/resetSession</TokenIdentifier>
			<Abstract type="html">Resets any data associated with the session</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (void)resetSession</Declaration>
			
			
			<Anchor>//api/name/resetSession</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/duplicateActionInFlight:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (CSFAction *)duplicateActionInFlight:(CSFAction *)action</Declaration>
			
			
			<Anchor>//api/name/duplicateActionInFlight:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/actionForSessionTask:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (CSFAction *)actionForSessionTask:(NSURLSessionTask *)task</Declaration>
			
			
			<Anchor>//api/name/actionForSessionTask:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CSFNetwork/cachedNetworkForUserAccount:</TokenIdentifier>
			<Abstract type="html">Provides a mean for test code to check shared instances of CSFNetwork</Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>+ (instancetype)cachedNetworkForUserAccount:(SFUserAccount *)account</Declaration>
			
			
			<Anchor>//api/name/cachedNetworkForUserAccount:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/delegate_networkStartedAction:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (void)delegate_networkStartedAction:(CSFAction *)action</Declaration>
			
			
			<Anchor>//api/name/delegate_networkStartedAction:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/delegate_networkCanceledAction:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (void)delegate_networkCanceledAction:(CSFAction *)action</Declaration>
			
			
			<Anchor>//api/name/delegate_networkCanceledAction:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/delegate_networkCompletedAction:withError:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (void)delegate_networkCompletedAction:(CSFAction *)action withError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/delegate_networkCompletedAction:withError:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/delegate_networkTask:changedState:toState:forAction:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Internal.h</DeclaredIn>
			
			<Declaration>- (void)delegate_networkTask:(NSURLSessionTask *)task changedState:(NSURLSessionTaskState)oldState toState:(NSURLSessionTaskState)newState forAction:(CSFAction *)action</Declaration>
			
			
			<Anchor>//api/name/delegate_networkTask:changedState:toState:forAction:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setOfflineCacheEnabled:</TokenIdentifier>
			<Abstract type="html">Indicates if caching the results of network requests through a local cache is enabled.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/CSFNetworkOutputCache</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/CSFAction/cacheResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign, getter=isOfflineCacheEnabled) BOOL offlineCacheEnabled</Declaration>
			
			
			<Anchor>//api/name/offlineCacheEnabled</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/isOfflineCacheEnabled</TokenIdentifier>
			<Abstract type="html">Indicates if caching the results of network requests through a local cache is enabled.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/CSFNetworkOutputCache</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/CSFAction/cacheResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign, getter=isOfflineCacheEnabled) BOOL offlineCacheEnabled</Declaration>
			
			
			<Anchor>//api/name/offlineCacheEnabled</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/offlineCacheEnabled</TokenIdentifier>
			<Abstract type="html">Indicates if caching the results of network requests through a local cache is enabled.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/CSFNetworkOutputCache</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instp/CSFAction/cacheResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, assign, getter=isOfflineCacheEnabled) BOOL offlineCacheEnabled</Declaration>
			
			
			<Anchor>//api/name/offlineCacheEnabled</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setOutputCaches:</TokenIdentifier>
			<Abstract type="html">List of output cache handlers that will be used for storing results retrieved from this network instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/addOutputCache:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/removeOutputCache:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy, readonly) NSArray *outputCaches</Declaration>
			
			
			<Anchor>//api/name/outputCaches</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/outputCaches</TokenIdentifier>
			<Abstract type="html">List of output cache handlers that will be used for storing results retrieved from this network instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/addOutputCache:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/removeOutputCache:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy, readonly) NSArray *outputCaches</Declaration>
			
			
			<Anchor>//api/name/outputCaches</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/outputCaches</TokenIdentifier>
			<Abstract type="html">List of output cache handlers that will be used for storing results retrieved from this network instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/addOutputCache:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/removeOutputCache:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, copy, readonly) NSArray *outputCaches</Declaration>
			
			
			<Anchor>//api/name/outputCaches</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/addOutputCache:</TokenIdentifier>
			<Abstract type="html">Explicitly adds an output cache handler to this network instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)addOutputCache:(NSObject&lt;CSFNetworkOutputCache&gt; *)outputCache</Declaration>
			<Parameters>
				<Parameter>
					<Name>outputCache</Name>
					<Abstract type="html">Output cache instance to add.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addOutputCache:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/removeOutputCache:</TokenIdentifier>
			<Abstract type="html">Explicitly removes the indicated output cache handler from this network instance.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>- (void)removeOutputCache:(NSObject&lt;CSFNetworkOutputCache&gt; *)outputCache</Declaration>
			<Parameters>
				<Parameter>
					<Name>outputCache</Name>
					<Abstract type="html">Output cache instance to remove.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeOutputCache:</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setupSalesforceObserver</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>CSFNetwork+Salesforce.h</DeclaredIn>
			
			<Declaration>- (void)setupSalesforceObserver</Declaration>
			
			
			<Anchor>//api/name/setupSalesforceObserver</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/setDefaultConnectCommunityId:</TokenIdentifier>
			<Abstract type="html">The ID for the Chatter Community that all Connect actions should use.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *defaultConnectCommunityId</Declaration>
			
			
			<Anchor>//api/name/defaultConnectCommunityId</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CSFNetwork/defaultConnectCommunityId</TokenIdentifier>
			<Abstract type="html">The ID for the Chatter Community that all Connect actions should use.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *defaultConnectCommunityId</Declaration>
			
			
			<Anchor>//api/name/defaultConnectCommunityId</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CSFNetwork/defaultConnectCommunityId</TokenIdentifier>
			<Abstract type="html">The ID for the Chatter Community that all Connect actions should use.</Abstract>
			<DeclaredIn>CSFNetwork.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *defaultConnectCommunityId</Declaration>
			
			
			<Anchor>//api/name/defaultConnectCommunityId</Anchor>
            <NodeRef refid="10"/>
		</Token>
		
        
        
	</File>
</Tokens>