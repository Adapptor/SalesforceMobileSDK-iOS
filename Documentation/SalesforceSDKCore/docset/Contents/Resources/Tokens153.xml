<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/SFAuthenticationManagerDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/SFAuthenticationManagerDelegate</TokenIdentifier>
			<Abstract type="html">Delegate protocol for SFAuthenticationManager events and callbacks.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
            
			
			<NodeRef refid="153"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerWillBeginAuthWithView:</TokenIdentifier>
			<Abstract type="html">Called when the authentication manager is starting the auth process with an auth view.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerWillBeginAuthWithView:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerWillBeginAuthWithView:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidStartAuthWebViewLoad:</TokenIdentifier>
			<Abstract type="html">Called when the auth view starts its load.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidStartAuthWebViewLoad:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidStartAuthWebViewLoad:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidFinishAuthWebViewLoad:</TokenIdentifier>
			<Abstract type="html">Called when the auth view load has finished.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidFinishAuthWebViewLoad:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidFinishAuthWebViewLoad:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManager:willDisplayAuthWebView:</TokenIdentifier>
			<Abstract type="html">Called when the auth manager is going to display the auth view.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManager:(SFAuthenticationManager *)manager willDisplayAuthWebView:(WKWebView *)view</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>view</Name>
					<Abstract type="html">The instance of the auth view to be displayed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManager:willDisplayAuthWebView:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerWillBeginAuthentication:authInfo:</TokenIdentifier>
			<Abstract type="html">Called before the auth manager will perform an authentication, this includes token refresh.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerWillBeginAuthentication:(SFAuthenticationManager *)manager authInfo:(SFOAuthInfo *)info</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>info</Name>
					<Abstract type="html">The auth info associated with authentication.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerWillBeginAuthentication:authInfo:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidAuthenticate:credentials:authInfo:</TokenIdentifier>
			<Abstract type="html">Called after the auth manager has successfully authenticated.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidAuthenticate:(SFAuthenticationManager *)manager credentials:(SFOAuthCredentials *)credentials authInfo:(SFOAuthInfo *)info</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>credentials</Name>
					<Abstract type="html">The newly-authenticated credentials.</Abstract>
				</Parameter><Parameter>
					<Name>info</Name>
					<Abstract type="html">The auth info associated with authentication.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidAuthenticate:credentials:authInfo:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidFinish:info:</TokenIdentifier>
			<Abstract type="html">Called after the auth manager has successfully authenticated and finished retrieving the identity information.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidFinish:(SFAuthenticationManager *)manager info:(SFOAuthInfo *)info</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>info</Name>
					<Abstract type="html">The auth info associated with authentication.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidFinish:info:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidFail:error:info:</TokenIdentifier>
			<Abstract type="html">Called after the auth manager had failed to authenticate.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidFail:(SFAuthenticationManager *)manager error:(NSError *)error info:(SFOAuthInfo *)info</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The error</Abstract>
				</Parameter><Parameter>
					<Name>info</Name>
					<Abstract type="html">The auth info associated with authentication.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidFail:error:info:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerIsNetworkAvailable:</TokenIdentifier>
			<Abstract type="html">Called when the auth manager wants to determine if the network is available (best guest).</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)authManagerIsNetworkAvailable:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the network is available, NO otherwise</Abstract></ReturnValue>
			<Anchor>//api/name/authManagerIsNetworkAvailable:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManager:willLogoutUser:</TokenIdentifier>
			<Abstract type="html">Called before the auth manager logs out the given user.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManager:(SFAuthenticationManager *)manager willLogoutUser:(SFUserAccount *)user</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>user</Name>
					<Abstract type="html">The user that will be logged out.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManager:willLogoutUser:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidLogout:</TokenIdentifier>
			<Abstract type="html">Called after the auth manager logs out.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidLogout:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidLogout:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerWillResignActive:</TokenIdentifier>
			<Abstract type="html">Called after UIApplicationWillResignActiveNotification is received</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerWillResignActive:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerWillResignActive:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidBecomeActive:</TokenIdentifier>
			<Abstract type="html">Called after UIApplicationDidBecomeActiveNotification is received.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidBecomeActive:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidBecomeActive:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerWillEnterForeground:</TokenIdentifier>
			<Abstract type="html">Called after UIApplicationWillEnterForegroundNotification is received.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerWillEnterForeground:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerWillEnterForeground:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidEnterBackground:</TokenIdentifier>
			<Abstract type="html">Called after UIApplicationDidEnterBackgroundNotification is received</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidEnterBackground:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidEnterBackground:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidProceedWithBrowserFlow:</TokenIdentifier>
			<Abstract type="html">Called when a browser flow authentication is proceeded.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidProceedWithBrowserFlow:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidProceedWithBrowserFlow:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidCancelBrowserFlow:</TokenIdentifier>
			<Abstract type="html">Called when a browser flow authentication is cancelled.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidCancelBrowserFlow:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidCancelBrowserFlow:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManager:willDisplayAuthSafariViewController:</TokenIdentifier>
			<Abstract type="html">Called when the auth manager is going to present the safari view controller.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManager:(SFAuthenticationManager *)manager willDisplayAuthSafariViewController:(SFSafariViewController *)svc</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter><Parameter>
					<Name>svc</Name>
					<Abstract type="html">The instance of the safari view controller to be presented.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManager:willDisplayAuthSafariViewController:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFAuthenticationManagerDelegate/authManagerDidCancelGenericFlow:</TokenIdentifier>
			<Abstract type="html">Called when a generic flow authentication is cancelled.</Abstract>
			<DeclaredIn>SFAuthenticationManager.h</DeclaredIn>
			
			<Declaration>- (void)authManagerDidCancelGenericFlow:(SFAuthenticationManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>manager</Name>
					<Abstract type="html">The instance of SFAuthenticationManager making the call.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/authManagerDidCancelGenericFlow:</Anchor>
            <NodeRef refid="153"/>
		</Token>
		
        
        
	</File>
</Tokens>