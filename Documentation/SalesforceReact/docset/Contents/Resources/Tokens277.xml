<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/RCTImageURLLoader.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/RCTImageURLLoader</TokenIdentifier>
			<Abstract type="html">Provides the interface needed to register an image loader. Image data
loaders are also bridge modules, so should be registered using
RCTEXPORTMODULE().</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
            
			
			<NodeRef refid="277"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTImageURLLoader/canLoadImageURL:</TokenIdentifier>
			<Abstract type="html">Indicates whether this data loader is capable of processing the specified
request URL. Typically the handler would examine the scheme/protocol of the
URL to determine this.</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>- (BOOL)canLoadImageURL:(NSURL *)requestURL</Declaration>
			
			
			<Anchor>//api/name/canLoadImageURL:</Anchor>
            <NodeRef refid="277"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTImageURLLoader/loadImageForURL:size:scale:resizeMode:progressHandler:partialLoadHandler:completionHandler:</TokenIdentifier>
			<Abstract type="html">Send a network request to load the request URL. The method should call the
progressHandler (if applicable) and the completionHandler when the request
has finished. The method should also return a cancellation block, if
applicable.</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>- (RCTImageLoaderCancellationBlock)loadImageForURL:(NSURL *)imageURL size:(CGSize)size scale:(CGFloat)scale resizeMode:(RCTResizeMode)resizeMode progressHandler:(RCTImageLoaderProgressBlock)progressHandler partialLoadHandler:(RCTImageLoaderPartialLoadBlock)partialLoadHandler completionHandler:(RCTImageLoaderCompletionBlock)completionHandler</Declaration>
			
			
			<Anchor>//api/name/loadImageForURL:size:scale:resizeMode:progressHandler:partialLoadHandler:completionHandler:</Anchor>
            <NodeRef refid="277"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTImageURLLoader/loaderPriority</TokenIdentifier>
			<Abstract type="html">If more than one RCTImageURLLoader responds YES to canLoadImageURL:
then loaderPriority is used to determine which one to use. The loader
with the highest priority will be selected. Default priority is zero. If
two or more valid loaders have the same priority, the selection order is
undefined.</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>- (float)loaderPriority</Declaration>
			
			
			<Anchor>//api/name/loaderPriority</Anchor>
            <NodeRef refid="277"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTImageURLLoader/requiresScheduling</TokenIdentifier>
			<Abstract type="html">If the loader must be called on the serial url cache queue, and whether the completion
block should be dispatched off the main thread. If this is NO, the loader will be
called from the main queue. Defaults to YES.</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>- (BOOL)requiresScheduling</Declaration>
			
			
			<Anchor>//api/name/requiresScheduling</Anchor>
            <NodeRef refid="277"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTImageURLLoader/shouldCacheLoadedImages</TokenIdentifier>
			<Abstract type="html">If images loaded by the loader should be cached in the decoded image cache.
Defaults to YES.</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>- (BOOL)shouldCacheLoadedImages</Declaration>
			
			
			<Anchor>//api/name/shouldCacheLoadedImages</Anchor>
            <NodeRef refid="277"/>
		</Token>
		
        
        
	</File>
</Tokens>