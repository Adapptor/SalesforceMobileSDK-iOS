<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RCTBlobManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RCTBlobManager</TokenIdentifier>
			<Abstract type="html">Copyright (c) 2015-present, Facebook, Inc.</Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
            
			
			<NodeRef refid="39"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/setBridge:</TokenIdentifier>
			<Abstract type="html">A reference to the RCTBridge. Useful for modules that require access
to bridge features, such as sending events or making JS calls. This
will be set automatically by the bridge when it initializes the module.
To implement this in your module, just add @synthesize bridge = _bridge;</Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (void)setBridge:(RCTBridge *)bridge</Declaration>
			
			
			<Anchor>//api/name/setBridge:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RCTBlobManager/requiresMainQueueSetup</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>+ (BOOL)requiresMainQueueSetup</Declaration>
			
			
			<Anchor>//api/name/requiresMainQueueSetup</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/constantsToExport</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (NSDictionary&lt;NSString*,id&gt; *)constantsToExport</Declaration>
			
			
			<Anchor>//api/name/constantsToExport</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/store:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (NSString *)store:(NSData *)data</Declaration>
			
			
			<Anchor>//api/name/store:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/store:withId:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (void)store:(NSData *)data withId:(NSString *)blobId</Declaration>
			
			
			<Anchor>//api/name/store:withId:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/resolve:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (NSData *)resolve:(NSDictionary&lt;NSString*,id&gt; *)blob</Declaration>
			
			
			<Anchor>//api/name/resolve:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/resolve:offset:size:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (NSData *)resolve:(NSString *)blobId offset:(NSInteger)offset size:(NSInteger)size</Declaration>
			
			
			<Anchor>//api/name/resolve:offset:size:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/resolveURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (NSData *)resolveURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/resolveURL:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/remove:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (void)remove:(NSString *)blobId</Declaration>
			
			
			<Anchor>//api/name/remove:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/canHandleRequest:</TokenIdentifier>
			<Abstract type="html">Indicates whether this handler is capable of processing the specified
request. Typically the handler would examine the scheme/protocol of the
request URL (and possibly the HTTP method and/or headers) to determine this.</Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (BOOL)canHandleRequest:(NSURLRequest *)request</Declaration>
			
			
			<Anchor>//api/name/canHandleRequest:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/sendRequest:withDelegate:</TokenIdentifier>
			<Abstract type="html">Send a network request and call the delegate with the response data. The
method should return a token, which can be anything, including the request
itself. This will be used later to refer to the request in callbacks. The
sendRequest:withDelegate: method must return before calling any of the
delegate methods, or the delegate won&apos;t recognize the token.
Following common Objective-C pattern, delegate will not be retained.</Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (id)sendRequest:(NSURLRequest *)request withDelegate:(id&lt;RCTURLRequestDelegate&gt;)delegate</Declaration>
			
			
			<Anchor>//api/name/sendRequest:withDelegate:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/cancelRequest:</TokenIdentifier>
			<Abstract type="html">Not all request types can be cancelled, but this method can be implemented
for ones that can. It should be used to free up any resources on ongoing
processes associated with the request.</Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (void)cancelRequest:(NSOperation *)op</Declaration>
			
			
			<Anchor>//api/name/cancelRequest:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/canHandleNetworkingRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (BOOL)canHandleNetworkingRequest:(NSDictionary *)data</Declaration>
			
			
			<Anchor>//api/name/canHandleNetworkingRequest:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/handleNetworkingRequest:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (NSDictionary *)handleNetworkingRequest:(NSDictionary *)data</Declaration>
			
			
			<Anchor>//api/name/handleNetworkingRequest:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/canHandleNetworkingResponse:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (BOOL)canHandleNetworkingResponse:(NSString *)responseType</Declaration>
			
			
			<Anchor>//api/name/canHandleNetworkingResponse:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/handleNetworkingResponse:data:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (id)handleNetworkingResponse:(NSURLResponse *)response data:(NSData *)data</Declaration>
			
			
			<Anchor>//api/name/handleNetworkingResponse:data:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/processWebsocketMessage:forSocketID:withType:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.mm</DeclaredIn>
			
			<Declaration>- (id)processWebsocketMessage:(id)message forSocketID:(NSNumber *)socketID withType:(NSString *__autoreleasing _Nonnull *)type</Declaration>
			
			
			<Anchor>//api/name/processWebsocketMessage:forSocketID:withType:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBlobManager/createFromParts:withId:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBlobManager.h</DeclaredIn>
			
			<Declaration>- (void)createFromParts:(NSArray&lt;NSDictionary&lt;NSString*,id&gt; *&gt; *)parts withId:(NSString *)blobId</Declaration>
			
			
			<Anchor>//api/name/createFromParts:withId:</Anchor>
            <NodeRef refid="39"/>
		</Token>
		
        
        
	</File>
</Tokens>