<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ARTBrush.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ARTBrush</TokenIdentifier>
			<Abstract type="html">Copyright (c) 2015-present, Facebook, Inc.</Abstract>
			<DeclaredIn>ARTBrush.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ARTBrush/initWithArray:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ARTBrush.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithArray:(NSArray *)data</Declaration>
			
			
			<Anchor>//api/name/initWithArray:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ARTBrush/applyFillColor:</TokenIdentifier>
			<Abstract type="html">For certain brushes we can fast path a combined fill and stroke.
For those brushes we override applyFillColor which sets the fill
color to be used by those batch paints. Those return YES.
We can&apos;t batch gradient painting in CoreGraphics, so those will
return NO and paint gets called instead.
@abstract</Abstract>
			<DeclaredIn>ARTBrush.h</DeclaredIn>
			
			<Declaration>- (BOOL)applyFillColor:(CGContextRef)context</Declaration>
			
			
			<Anchor>//api/name/applyFillColor:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ARTBrush/paint:</TokenIdentifier>
			<Abstract type="html">paint fills the context with a brush. The context is assumed to
be clipped.
@abstract</Abstract>
			<DeclaredIn>ARTBrush.h</DeclaredIn>
			
			<Declaration>- (void)paint:(CGContextRef)context</Declaration>
			
			
			<Anchor>//api/name/paint:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
        
	</File>
</Tokens>