<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RCTBridge.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RCTBridge</TokenIdentifier>
			<Abstract type="html">Async batched bridge used to communicate with the JavaScript application.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
            
			
			<NodeRef refid="40"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/initWithDelegate:launchOptions:</TokenIdentifier>
			<Abstract type="html">Creates a new bridge with a custom RCTBridgeDelegate.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDelegate:(id&lt;RCTBridgeDelegate&gt;)delegate launchOptions:(NSDictionary *)launchOptions</Declaration>
			
			
			<Anchor>//api/name/initWithDelegate:launchOptions:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/initWithBundleURL:moduleProvider:launchOptions:</TokenIdentifier>
			<Abstract type="html">DEPRECATED: Use initWithDelegate:launchOptions: instead</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithBundleURL:(NSURL *)bundleURL moduleProvider:(RCTBridgeModuleListProvider)block launchOptions:(NSDictionary *)launchOptions</Declaration>
			
			
			<Anchor>//api/name/initWithBundleURL:moduleProvider:launchOptions:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/enqueueJSCall:args:</TokenIdentifier>
			<Abstract type="html">This method is used to call functions in the JavaScript application context.
It is primarily intended for use by modules that require two-way communication
with the JavaScript code. Safe to call from any thread.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (void)enqueueJSCall:(NSString *)moduleDotMethod args:(NSArray *)args</Declaration>
			
			
			<Anchor>//api/name/enqueueJSCall:args:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/enqueueJSCall:method:args:completion:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (void)enqueueJSCall:(NSString *)module method:(NSString *)method args:(NSArray *)args completion:(dispatch_block_t)completion</Declaration>
			
			
			<Anchor>//api/name/enqueueJSCall:method:args:completion:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/registerSegmentWithId:path:</TokenIdentifier>
			<Abstract type="html">This method registers the file path of an additional JS segment by its ID.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (void)registerSegmentWithId:(NSUInteger)segmentId path:(NSString *)path</Declaration>
			
			
			<Anchor>//api/name/registerSegmentWithId:path:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleForName:</TokenIdentifier>
			<Abstract type="html">Retrieve a bridge module instance by name or class. Note that modules are
lazily instantiated, so calling these methods for the first time with a given
module name/class may cause the class to be sychronously instantiated,
potentially blocking both the calling thread and main thread for a short time.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (id)moduleForName:(NSString *)moduleName</Declaration>
			
			
			<Anchor>//api/name/moduleForName:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleForClass:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (id)moduleForClass:(Class)moduleClass</Declaration>
			
			
			<Anchor>//api/name/moduleForClass:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/modulesConformingToProtocol:</TokenIdentifier>
			<Abstract type="html">Convenience method for retrieving all modules conforming to a given protocol.
Modules will be sychronously instantiated if they haven&apos;t already been,
potentially blocking both the calling thread and main thread for a short time.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (NSArray *)modulesConformingToProtocol:(Protocol *)protocol</Declaration>
			
			
			<Anchor>//api/name/modulesConformingToProtocol:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleIsInitialized:</TokenIdentifier>
			<Abstract type="html">Test if a module has been initialized. Use this prior to calling
moduleForClass: or moduleForName: if you do not want to cause the module
to be instantiated if it hasn&apos;t been already.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (BOOL)moduleIsInitialized:(Class)moduleClass</Declaration>
			
			
			<Anchor>//api/name/moduleIsInitialized:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/jsBoundExtraModuleForClass:</TokenIdentifier>
			<Abstract type="html">Retrieve an extra module that gets bound to the JS context, if any.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (id)jsBoundExtraModuleForClass:(Class)moduleClass</Declaration>
			
			
			<Anchor>//api/name/jsBoundExtraModuleForClass:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setModuleClasses:</TokenIdentifier>
			<Abstract type="html">All registered bridge module classes.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSArray&lt;Class&gt; *moduleClasses</Declaration>
			
			
			<Anchor>//api/name/moduleClasses</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleClasses</TokenIdentifier>
			<Abstract type="html">All registered bridge module classes.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSArray&lt;Class&gt; *moduleClasses</Declaration>
			
			
			<Anchor>//api/name/moduleClasses</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/moduleClasses</TokenIdentifier>
			<Abstract type="html">All registered bridge module classes.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSArray&lt;Class&gt; *moduleClasses</Declaration>
			
			
			<Anchor>//api/name/moduleClasses</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setBundleURL:</TokenIdentifier>
			<Abstract type="html">URL of the script that was loaded into the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSURL *bundleURL</Declaration>
			
			
			<Anchor>//api/name/bundleURL</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/bundleURL</TokenIdentifier>
			<Abstract type="html">URL of the script that was loaded into the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSURL *bundleURL</Declaration>
			
			
			<Anchor>//api/name/bundleURL</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/bundleURL</TokenIdentifier>
			<Abstract type="html">URL of the script that was loaded into the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSURL *bundleURL</Declaration>
			
			
			<Anchor>//api/name/bundleURL</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setExecutorClass:</TokenIdentifier>
			<Abstract type="html">The class of the executor currently being used. Changes to this value will
take effect after the bridge is reloaded.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) Class executorClass</Declaration>
			
			
			<Anchor>//api/name/executorClass</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/executorClass</TokenIdentifier>
			<Abstract type="html">The class of the executor currently being used. Changes to this value will
take effect after the bridge is reloaded.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) Class executorClass</Declaration>
			
			
			<Anchor>//api/name/executorClass</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/executorClass</TokenIdentifier>
			<Abstract type="html">The class of the executor currently being used. Changes to this value will
take effect after the bridge is reloaded.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) Class executorClass</Declaration>
			
			
			<Anchor>//api/name/executorClass</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate provided during the bridge initialization</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;RCTBridgeDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/delegate</TokenIdentifier>
			<Abstract type="html">The delegate provided during the bridge initialization</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;RCTBridgeDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/delegate</TokenIdentifier>
			<Abstract type="html">The delegate provided during the bridge initialization</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;RCTBridgeDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setLaunchOptions:</TokenIdentifier>
			<Abstract type="html">The launch options that were used to initialize the bridge.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSDictionary *launchOptions</Declaration>
			
			
			<Anchor>//api/name/launchOptions</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/launchOptions</TokenIdentifier>
			<Abstract type="html">The launch options that were used to initialize the bridge.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSDictionary *launchOptions</Declaration>
			
			
			<Anchor>//api/name/launchOptions</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/launchOptions</TokenIdentifier>
			<Abstract type="html">The launch options that were used to initialize the bridge.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) NSDictionary *launchOptions</Declaration>
			
			
			<Anchor>//api/name/launchOptions</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setLoading:</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge is currently loading.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isLoading) BOOL loading</Declaration>
			
			
			<Anchor>//api/name/loading</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/isLoading</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge is currently loading.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isLoading) BOOL loading</Declaration>
			
			
			<Anchor>//api/name/loading</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/loading</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge is currently loading.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isLoading) BOOL loading</Declaration>
			
			
			<Anchor>//api/name/loading</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setValid:</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge has been invalidated.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isValid) BOOL valid</Declaration>
			
			
			<Anchor>//api/name/valid</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/isValid</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge has been invalidated.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isValid) BOOL valid</Declaration>
			
			
			<Anchor>//api/name/valid</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/valid</TokenIdentifier>
			<Abstract type="html">Use this to check if the bridge has been invalidated.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isValid) BOOL valid</Declaration>
			
			
			<Anchor>//api/name/valid</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setPerformanceLogger:</TokenIdentifier>
			<Abstract type="html">Link to the Performance Logger that logs React Native perf events.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) RCTPerformanceLogger *performanceLogger</Declaration>
			
			
			<Anchor>//api/name/performanceLogger</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/performanceLogger</TokenIdentifier>
			<Abstract type="html">Link to the Performance Logger that logs React Native perf events.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) RCTPerformanceLogger *performanceLogger</Declaration>
			
			
			<Anchor>//api/name/performanceLogger</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/performanceLogger</TokenIdentifier>
			<Abstract type="html">Link to the Performance Logger that logs React Native perf events.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, strong) RCTPerformanceLogger *performanceLogger</Declaration>
			
			
			<Anchor>//api/name/performanceLogger</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/reload</TokenIdentifier>
			<Abstract type="html">Reload the bundle and reset executor &amp;amp; modules. Safe to call from any thread.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (void)reload</Declaration>
			
			
			<Anchor>//api/name/reload</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/requestReload</TokenIdentifier>
			<Abstract type="html">Inform the bridge, and anything subscribing to it, that it should reload.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (void)requestReload</Declaration>
			
			
			<Anchor>//api/name/requestReload</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/isBatchActive</TokenIdentifier>
			<Abstract type="html">Says whether bridge has started receiving calls from javascript.</Abstract>
			<DeclaredIn>RCTBridge.h</DeclaredIn>
			
			<Declaration>- (BOOL)isBatchActive</Declaration>
			
			
			<Anchor>//api/name/isBatchActive</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/webSocketModule</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTWebSocketModule.h</DeclaredIn>
			
			<Declaration>- (RCTWebSocketModule *)webSocketModule</Declaration>
			
			
			<Anchor>//api/name/webSocketModule</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/initWithDelegate:bundleURL:moduleProvider:launchOptions:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDelegate:(id&lt;RCTBridgeDelegate&gt;)delegate bundleURL:(NSURL *)bundleURL moduleProvider:(RCTBridgeModuleListProvider)block launchOptions:(NSDictionary *)launchOptions</Declaration>
			
			
			<Anchor>//api/name/initWithDelegate:bundleURL:moduleProvider:launchOptions:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setFlowID:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int64_t flowID</Declaration>
			
			
			<Anchor>//api/name/flowID</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/flowID</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int64_t flowID</Declaration>
			
			
			<Anchor>//api/name/flowID</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/flowID</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int64_t flowID</Declaration>
			
			
			<Anchor>//api/name/flowID</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setFlowIDMap:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CFMutableDictionaryRef flowIDMap</Declaration>
			
			
			<Anchor>//api/name/flowIDMap</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/flowIDMap</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CFMutableDictionaryRef flowIDMap</Declaration>
			
			
			<Anchor>//api/name/flowIDMap</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/flowIDMap</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CFMutableDictionaryRef flowIDMap</Declaration>
			
			
			<Anchor>//api/name/flowIDMap</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setFlowIDMapLock:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSLock *flowIDMapLock</Declaration>
			
			
			<Anchor>//api/name/flowIDMapLock</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/flowIDMapLock</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSLock *flowIDMapLock</Declaration>
			
			
			<Anchor>//api/name/flowIDMapLock</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/flowIDMapLock</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSLock *flowIDMapLock</Declaration>
			
			
			<Anchor>//api/name/flowIDMapLock</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setBridgeDescription:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *bridgeDescription</Declaration>
			
			
			<Anchor>//api/name/bridgeDescription</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/bridgeDescription</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *bridgeDescription</Declaration>
			
			
			<Anchor>//api/name/bridgeDescription</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/bridgeDescription</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *bridgeDescription</Declaration>
			
			
			<Anchor>//api/name/bridgeDescription</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RCTBridge/currentBridge</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>+ (instancetype)currentBridge</Declaration>
			
			
			<Anchor>//api/name/currentBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RCTBridge/setCurrentBridge:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>+ (void)setCurrentBridge:(RCTBridge *)bridge</Declaration>
			
			
			<Anchor>//api/name/setCurrentBridge:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setUp</TokenIdentifier>
			<Abstract type="html">Bridge setup code - creates an instance of RCTBachedBridge. Exposed for
test only</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)setUp</Declaration>
			
			
			<Anchor>//api/name/setUp</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/enqueueCallback:args:</TokenIdentifier>
			<Abstract type="html">This method is used to invoke a callback that was registered in the
JavaScript application context. Safe to call from any thread.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)enqueueCallback:(NSNumber *)cbID args:(NSArray *)args</Declaration>
			
			
			<Anchor>//api/name/enqueueCallback:args:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setBatchedBridge:</TokenIdentifier>
			<Abstract type="html">This property is mostly used on the main thread, but may be touched from
a background thread if the RCTBridge happens to deallocate on a background
thread. Therefore, we want all writes to it to be seen atomically.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) RCTBridge *batchedBridge</Declaration>
			
			
			<Anchor>//api/name/batchedBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/batchedBridge</TokenIdentifier>
			<Abstract type="html">This property is mostly used on the main thread, but may be touched from
a background thread if the RCTBridge happens to deallocate on a background
thread. Therefore, we want all writes to it to be seen atomically.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) RCTBridge *batchedBridge</Declaration>
			
			
			<Anchor>//api/name/batchedBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/batchedBridge</TokenIdentifier>
			<Abstract type="html">This property is mostly used on the main thread, but may be touched from
a background thread if the RCTBridge happens to deallocate on a background
thread. Therefore, we want all writes to it to be seen atomically.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) RCTBridge *batchedBridge</Declaration>
			
			
			<Anchor>//api/name/batchedBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setModuleProvider:</TokenIdentifier>
			<Abstract type="html">The block that creates the modules&apos; instances to be added to the bridge.
Exposed for RCTCxxBridge</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) RCTBridgeModuleListProvider moduleProvider</Declaration>
			
			
			<Anchor>//api/name/moduleProvider</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleProvider</TokenIdentifier>
			<Abstract type="html">The block that creates the modules&apos; instances to be added to the bridge.
Exposed for RCTCxxBridge</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) RCTBridgeModuleListProvider moduleProvider</Declaration>
			
			
			<Anchor>//api/name/moduleProvider</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/moduleProvider</TokenIdentifier>
			<Abstract type="html">The block that creates the modules&apos; instances to be added to the bridge.
Exposed for RCTCxxBridge</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy, readonly) RCTBridgeModuleListProvider moduleProvider</Declaration>
			
			
			<Anchor>//api/name/moduleProvider</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setRedBox:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTRedBox.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTRedBox *redBox</Declaration>
			
			
			<Anchor>//api/name/redBox</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/redBox</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTRedBox.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTRedBox *redBox</Declaration>
			
			
			<Anchor>//api/name/redBox</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/redBox</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTRedBox.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTRedBox *redBox</Declaration>
			
			
			<Anchor>//api/name/redBox</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setInspectable:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isInspectable) BOOL inspectable</Declaration>
			
			
			<Anchor>//api/name/inspectable</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/isInspectable</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isInspectable) BOOL inspectable</Declaration>
			
			
			<Anchor>//api/name/inspectable</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/inspectable</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isInspectable) BOOL inspectable</Declaration>
			
			
			<Anchor>//api/name/inspectable</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setAssetsLibrary:</TokenIdentifier>
			<Abstract type="html">The shared asset library instance.</Abstract>
			<DeclaredIn>RCTAssetsLibraryRequestHandler.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) ALAssetsLibrary *assetsLibrary</Declaration>
			
			
			<Anchor>//api/name/assetsLibrary</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/assetsLibrary</TokenIdentifier>
			<Abstract type="html">The shared asset library instance.</Abstract>
			<DeclaredIn>RCTAssetsLibraryRequestHandler.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) ALAssetsLibrary *assetsLibrary</Declaration>
			
			
			<Anchor>//api/name/assetsLibrary</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/assetsLibrary</TokenIdentifier>
			<Abstract type="html">The shared asset library instance.</Abstract>
			<DeclaredIn>RCTAssetsLibraryRequestHandler.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) ALAssetsLibrary *assetsLibrary</Declaration>
			
			
			<Anchor>//api/name/assetsLibrary</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setImageLoader:</TokenIdentifier>
			<Abstract type="html">The shared image loader instance</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageLoader *imageLoader</Declaration>
			
			
			<Anchor>//api/name/imageLoader</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/imageLoader</TokenIdentifier>
			<Abstract type="html">The shared image loader instance</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageLoader *imageLoader</Declaration>
			
			
			<Anchor>//api/name/imageLoader</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/imageLoader</TokenIdentifier>
			<Abstract type="html">The shared image loader instance</Abstract>
			<DeclaredIn>RCTImageLoader.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageLoader *imageLoader</Declaration>
			
			
			<Anchor>//api/name/imageLoader</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/fabricUIManager</TokenIdentifier>
			<Abstract type="html">To access via the bridge:</Abstract>
			<DeclaredIn>RCTFabricUIManagerWrapper.h</DeclaredIn>
			
			<Declaration>- (std : : shared_ptr&lt;FabricUIManager&gt;)fabricUIManager</Declaration>
			
			
			<Anchor>//api/name/fabricUIManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setJsContextRef:</TokenIdentifier>
			<Abstract type="html">The raw JSGlobalContextRef used by the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) JSGlobalContextRef jsContextRef</Declaration>
			
			
			<Anchor>//api/name/jsContextRef</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/jsContextRef</TokenIdentifier>
			<Abstract type="html">The raw JSGlobalContextRef used by the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) JSGlobalContextRef jsContextRef</Declaration>
			
			
			<Anchor>//api/name/jsContextRef</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/jsContextRef</TokenIdentifier>
			<Abstract type="html">The raw JSGlobalContextRef used by the bridge.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) JSGlobalContextRef jsContextRef</Declaration>
			
			
			<Anchor>//api/name/jsContextRef</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setDevMenu:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTDevMenu.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTDevMenu *devMenu</Declaration>
			
			
			<Anchor>//api/name/devMenu</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/devMenu</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTDevMenu.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTDevMenu *devMenu</Declaration>
			
			
			<Anchor>//api/name/devMenu</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/devMenu</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTDevMenu.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTDevMenu *devMenu</Declaration>
			
			
			<Anchor>//api/name/devMenu</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setNetworking:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTNetworking.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTNetworking *networking</Declaration>
			
			
			<Anchor>//api/name/networking</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/networking</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTNetworking.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTNetworking *networking</Declaration>
			
			
			<Anchor>//api/name/networking</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/networking</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTNetworking.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTNetworking *networking</Declaration>
			
			
			<Anchor>//api/name/networking</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setAccessibilityManager:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTAccessibilityManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTAccessibilityManager *accessibilityManager</Declaration>
			
			
			<Anchor>//api/name/accessibilityManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/accessibilityManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTAccessibilityManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTAccessibilityManager *accessibilityManager</Declaration>
			
			
			<Anchor>//api/name/accessibilityManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/accessibilityManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTAccessibilityManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTAccessibilityManager *accessibilityManager</Declaration>
			
			
			<Anchor>//api/name/accessibilityManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/eventDispatcher</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTEventDispatcher.h</DeclaredIn>
			
			<Declaration>- (RCTEventDispatcher *)eventDispatcher</Declaration>
			
			
			<Anchor>//api/name/eventDispatcher</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/devSettings</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTDevSettings.h</DeclaredIn>
			
			<Declaration>- (RCTDevSettings *)devSettings</Declaration>
			
			
			<Anchor>//api/name/devSettings</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setUiManager:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTUIManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTUIManager *uiManager</Declaration>
			
			
			<Anchor>//api/name/uiManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/uiManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTUIManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTUIManager *uiManager</Declaration>
			
			
			<Anchor>//api/name/uiManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/uiManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTUIManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTUIManager *uiManager</Declaration>
			
			
			<Anchor>//api/name/uiManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setParentBridge:</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *parentBridge</Declaration>
			
			
			<Anchor>//api/name/parentBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/parentBridge</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *parentBridge</Declaration>
			
			
			<Anchor>//api/name/parentBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/parentBridge</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *parentBridge</Declaration>
			
			
			<Anchor>//api/name/parentBridge</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setModuleSetupComplete:</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL moduleSetupComplete</Declaration>
			
			
			<Anchor>//api/name/moduleSetupComplete</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleSetupComplete</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL moduleSetupComplete</Declaration>
			
			
			<Anchor>//api/name/moduleSetupComplete</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/moduleSetupComplete</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL moduleSetupComplete</Declaration>
			
			
			<Anchor>//api/name/moduleSetupComplete</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/start</TokenIdentifier>
			<Abstract type="html">Called on the child bridge to run the executor and start loading.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/registerModuleForFrameUpdates:withModuleData:</TokenIdentifier>
			<Abstract type="html">Used by RCTModuleData to register the module for frame updates after it is
lazily initialized.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)registerModuleForFrameUpdates:(id&lt;RCTBridgeModule&gt;)module withModuleData:(RCTModuleData *)moduleData</Declaration>
			
			
			<Anchor>//api/name/registerModuleForFrameUpdates:withModuleData:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/dispatchBlock:queue:</TokenIdentifier>
			<Abstract type="html">Dispatch work to a module&apos;s queue - this is also suports the fake RCTJSThread
queue. Exposed for the RCTProfiler</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)dispatchBlock:(dispatch_block_t)block queue:(dispatch_queue_t)queue</Declaration>
			
			
			<Anchor>//api/name/dispatchBlock:queue:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/moduleDataForName:</TokenIdentifier>
			<Abstract type="html">Get the module data for a given module name. Used by UIManager to implement
the dispatchViewManagerCommand method.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (RCTModuleData *)moduleDataForName:(NSString *)moduleName</Declaration>
			
			
			<Anchor>//api/name/moduleDataForName:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/registerAdditionalModuleClasses:</TokenIdentifier>
			<Abstract type="html">Registers additional classes with the ModuleRegistry.</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)registerAdditionalModuleClasses:(NSArray&lt;Class&gt; *)newModules</Declaration>
			
			
			<Anchor>//api/name/registerAdditionalModuleClasses:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/startProfiling</TokenIdentifier>
			<Abstract type="html">Systrace profiler toggling methods exposed for the RCTDevMenu</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)startProfiling</Declaration>
			
			
			<Anchor>//api/name/startProfiling</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/stopProfiling:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)stopProfiling:(void ( ^ ) ( NSData *))callback</Declaration>
			
			
			<Anchor>//api/name/stopProfiling:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/callNativeModule:method:params:</TokenIdentifier>
			<Abstract type="html">Synchronously call a specific native module&apos;s method and return the result</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (id)callNativeModule:(NSUInteger)moduleID method:(NSUInteger)methodID params:(NSArray *)params</Declaration>
			
			
			<Anchor>//api/name/callNativeModule:method:params:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/logMessage:level:</TokenIdentifier>
			<Abstract type="html">Hook exposed for RCTLog to send logs to JavaScript when not running in JSC</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)logMessage:(NSString *)message level:(NSString *)level</Declaration>
			
			
			<Anchor>//api/name/logMessage:level:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/_immediatelyCallTimer:</TokenIdentifier>
			<Abstract type="html">Allow super fast, one time, timers to skip the queue and be directly executed</Abstract>
			<DeclaredIn>RCTBridge+Private.h</DeclaredIn>
			
			<Declaration>- (void)_immediatelyCallTimer:(NSNumber *)timer</Declaration>
			
			
			<Anchor>//api/name/_immediatelyCallTimer:</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/setImageStoreManager:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTImageStoreManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageStoreManager *imageStoreManager</Declaration>
			
			
			<Anchor>//api/name/imageStoreManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RCTBridge/imageStoreManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTImageStoreManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageStoreManager *imageStoreManager</Declaration>
			
			
			<Anchor>//api/name/imageStoreManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RCTBridge/imageStoreManager</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTImageStoreManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RCTImageStoreManager *imageStoreManager</Declaration>
			
			
			<Anchor>//api/name/imageStoreManager</Anchor>
            <NodeRef refid="40"/>
		</Token>
		
        
        
	</File>
</Tokens>