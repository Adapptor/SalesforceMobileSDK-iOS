<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/RCTBridgeModule.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/RCTBridgeModule</TokenIdentifier>
			<Abstract type="html">Provides the interface needed to register a bridge module.</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
            
			
			<NodeRef refid="254"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/moduleName</TokenIdentifier>
			<Abstract type="html">Place this macro in your class implementation to automatically register
your module with the bridge when it loads. The optional js_name argument
will be used as the JS module name. If omitted, the JS module name will
match the Objective-C class name.</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>+ (NSString *)moduleName</Declaration>
			
			
			<Anchor>//api/name/moduleName</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/load</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>+ (void)load</Declaration>
			
			
			<Anchor>//api/name/load</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/setBridge:</TokenIdentifier>
			<Abstract type="html">A reference to the RCTBridge. Useful for modules that require access
to bridge features, such as sending events or making JS calls. This
will be set automatically by the bridge when it initializes the module.
To implement this in your module, just add @synthesize bridge = _bridge;</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *bridge</Declaration>
			
			
			<Anchor>//api/name/bridge</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/bridge</TokenIdentifier>
			<Abstract type="html">A reference to the RCTBridge. Useful for modules that require access
to bridge features, such as sending events or making JS calls. This
will be set automatically by the bridge when it initializes the module.
To implement this in your module, just add @synthesize bridge = _bridge;</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *bridge</Declaration>
			
			
			<Anchor>//api/name/bridge</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/RCTBridgeModule/bridge</TokenIdentifier>
			<Abstract type="html">A reference to the RCTBridge. Useful for modules that require access
to bridge features, such as sending events or making JS calls. This
will be set automatically by the bridge when it initializes the module.
To implement this in your module, just add @synthesize bridge = _bridge;</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak, readonly) RCTBridge *bridge</Declaration>
			
			
			<Anchor>//api/name/bridge</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/setMethodQueue:</TokenIdentifier>
			<Abstract type="html">The queue that will be used to call all exported methods. If omitted, this
will call on a default background queue, which is avoids blocking the main
thread.</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) dispatch_queue_t methodQueue</Declaration>
			
			
			<Anchor>//api/name/methodQueue</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/methodQueue</TokenIdentifier>
			<Abstract type="html">The queue that will be used to call all exported methods. If omitted, this
will call on a default background queue, which is avoids blocking the main
thread.</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) dispatch_queue_t methodQueue</Declaration>
			
			
			<Anchor>//api/name/methodQueue</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/RCTBridgeModule/methodQueue</TokenIdentifier>
			<Abstract type="html">The queue that will be used to call all exported methods. If omitted, this
will call on a default background queue, which is avoids blocking the main
thread.</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) dispatch_queue_t methodQueue</Declaration>
			
			
			<Anchor>//api/name/methodQueue</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/RCTBridgeModule/method</TokenIdentifier>
			<Abstract type="html">Similar to RCTEXPORTMETHOD but lets you set the JS name of the exported
method. Example usage:</Abstract>
			<DeclaredIn>RCTBridgeModule.h</DeclaredIn>
			
			<Declaration>- (void)method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
            <NodeRef refid="254"/>
		</Token>
		
        
        
	</File>
</Tokens>