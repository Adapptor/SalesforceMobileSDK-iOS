<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFRestRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFRestRequest</TokenIdentifier>
			<Abstract type="html">Request object used to send a REST request to Salesforce.com</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
            
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SFRestAPI</TokenIdentifier>
		
	</RelatedTokens>
	
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setMethod:</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/method</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/method</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setPath:</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/path</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/path</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setQueryParams:</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSDictionary&lt;NSString*NSObject*&gt; *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/queryParams</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSDictionary&lt;NSString*NSObject*&gt; *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/queryParams</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSDictionary&lt;NSString*NSObject*&gt; *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setCustomHeaders:</TokenIdentifier>
			<Abstract type="html">Dictionary of any custom HTTP headers you wish to add to your request.  You can also use
setHeaderValue:forHeaderName: to add headers to this property.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *customHeaders</Declaration>
			
			
			<Anchor>//api/name/customHeaders</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/customHeaders</TokenIdentifier>
			<Abstract type="html">Dictionary of any custom HTTP headers you wish to add to your request.  You can also use
setHeaderValue:forHeaderName: to add headers to this property.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *customHeaders</Declaration>
			
			
			<Anchor>//api/name/customHeaders</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/customHeaders</TokenIdentifier>
			<Abstract type="html">Dictionary of any custom HTTP headers you wish to add to your request.  You can also use
setHeaderValue:forHeaderName: to add headers to this property.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *customHeaders</Declaration>
			
			
			<Anchor>//api/name/customHeaders</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setAction:</TokenIdentifier>
			<Abstract type="html">Underlying SFRestAPISalesforceAction through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) SFRestAPISalesforceAction *action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/action</TokenIdentifier>
			<Abstract type="html">Underlying SFRestAPISalesforceAction through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) SFRestAPISalesforceAction *action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/action</TokenIdentifier>
			<Abstract type="html">Underlying SFRestAPISalesforceAction through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) SFRestAPISalesforceAction *action</Declaration>
			
			
			<Anchor>//api/name/action</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setEndpoint:</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/endpoint</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/endpoint</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setRequiresAuthentication:</TokenIdentifier>
			<Abstract type="html">Whether or not this request requires authentication.  If YES, the credentials will be added to
the request headers before sending the request.  If NO, they will not.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL requiresAuthentication</Declaration>
			
			
			<Anchor>//api/name/requiresAuthentication</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/requiresAuthentication</TokenIdentifier>
			<Abstract type="html">Whether or not this request requires authentication.  If YES, the credentials will be added to
the request headers before sending the request.  If NO, they will not.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL requiresAuthentication</Declaration>
			
			
			<Anchor>//api/name/requiresAuthentication</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/requiresAuthentication</TokenIdentifier>
			<Abstract type="html">Whether or not this request requires authentication.  If YES, the credentials will be added to
the request headers before sending the request.  If NO, they will not.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL requiresAuthentication</Declaration>
			
			
			<Anchor>//api/name/requiresAuthentication</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setParseResponse:</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/parseResponse</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/parseResponse</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/prepareRequestForSend</TokenIdentifier>
			<Abstract type="html">Override this method to implement any request preparations immediately prior to the request
being sent.  Note: You should not call this method directly.  And make sure to call the
super implementation within your own implementation.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)prepareRequestForSend</Declaration>
			
			
			<Anchor>//api/name/prepareRequestForSend</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setHeaderValue:forHeaderName:</TokenIdentifier>
			<Abstract type="html">Sets the value for the specified HTTP header.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)setHeaderValue:(nullable NSString *)value forHeaderName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">The header value. If value is nil, this method will remove the HTTP header
from the collection of headers.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the HTTP header to set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setHeaderValue:forHeaderName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/cancel</TokenIdentifier>
			<Abstract type="html">Cancels this request if it is running</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/addPostFileData:paramName:fileName:mimeType:</TokenIdentifier>
			<Abstract type="html">Add file to upload.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)addPostFileData:(NSData *)fileData paramName:(NSString *)paramName fileName:(NSString *)fileName mimeType:(NSString *)mimeType</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileData</Name>
					<Abstract type="html">Value of this POST parameter</Abstract>
				</Parameter><Parameter>
					<Name>paramName</Name>
					<Abstract type="html">Name of the POST parameter</Abstract>
				</Parameter><Parameter>
					<Name>fileName</Name>
					<Abstract type="html">Name of the file</Abstract>
				</Parameter><Parameter>
					<Name>mimeType</Name>
					<Abstract type="html">MIME type of the file</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addPostFileData:paramName:fileName:mimeType:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setCustomRequestBodyString:contentType:</TokenIdentifier>
			<Abstract type="html">Sets a custom request body based on an NSString representation.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)setCustomRequestBodyString:(NSString *)bodyString contentType:(NSString *)contentType</Declaration>
			<Parameters>
				<Parameter>
					<Name>bodyString</Name>
					<Abstract type="html">The NSString object representing the request body.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">The content type associated with this request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomRequestBodyString:contentType:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setCustomRequestBodyData:contentType:</TokenIdentifier>
			<Abstract type="html">Sets a custom request body based on an NSData representation.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)setCustomRequestBodyData:(NSData *)bodyData contentType:(NSString *)contentType</Declaration>
			<Parameters>
				<Parameter>
					<Name>bodyData</Name>
					<Abstract type="html">The NSData object representing the request body.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">The content type associated with this request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomRequestBodyData:contentType:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setCustomRequestBodyStream:contentType:</TokenIdentifier>
			<Abstract type="html">Sets a custom request body based on an NSInputStream representation.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>- (void)setCustomRequestBodyStream:(NSInputStream *( ^ ) ( void ))bodyStreamBlock contentType:(NSString *)contentType</Declaration>
			<Parameters>
				<Parameter>
					<Name>bodyStreamBlock</Name>
					<Abstract type="html">The block that will return an NSInputStream object representing the request body.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">The content type associated with this request.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomRequestBodyStream:contentType:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFRestRequest/isNetworkError:</TokenIdentifier>
			<Abstract type="html">Indicates whether the error code of the given error specifies a network error.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>+ (BOOL)isNetworkError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">The error object to check</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the error code of the given error specifies a network error</Abstract></ReturnValue>
			<Anchor>//api/name/isNetworkError:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFRestRequest/sfRestMethodFromHTTPMethod:</TokenIdentifier>
			<Abstract type="html">* Return SFRestMethod from string</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>+ (SFRestMethod)sfRestMethodFromHTTPMethod:(NSString *)httpMethod</Declaration>
			<Parameters>
				<Parameter>
					<Name>httpMethod</Name>
					<Abstract type="html">An HTTP method; for example, &quot;get&quot; or &quot;post&quot;</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The SFRestMethod enumerator for the given HTTP method</Abstract></ReturnValue>
			<Anchor>//api/name/sfRestMethodFromHTTPMethod:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFRestRequest/requestWithMethod:path:queryParams:</TokenIdentifier>
			<Abstract type="html">Creates an SFRestRequest object. See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
			<Declaration>+ (instancetype)requestWithMethod:(SFRestMethod)method path:(NSString *)path queryParams:(nullable NSDictionary&lt;NSString*,NSString*&gt; *)queryParams</Declaration>
			<Parameters>
				<Parameter>
					<Name>method</Name>
					<Abstract type="html">the HTTP method</Abstract>
				</Parameter><Parameter>
					<Name>path</Name>
					<Abstract type="html">the request path</Abstract>
				</Parameter><Parameter>
					<Name>queryParams</Name>
					<Abstract type="html">the parameters of the request (could be nil)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestWithMethod:path:queryParams:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setRequestBodyStreamBlock:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSInputStream *^ ) ( void ) requestBodyStreamBlock</Declaration>
			
			
			<Anchor>//api/name/requestBodyStreamBlock</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/requestBodyStreamBlock</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSInputStream *^ ) ( void ) requestBodyStreamBlock</Declaration>
			
			
			<Anchor>//api/name/requestBodyStreamBlock</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/requestBodyStreamBlock</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSInputStream *^ ) ( void ) requestBodyStreamBlock</Declaration>
			
			
			<Anchor>//api/name/requestBodyStreamBlock</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setRequestContentType:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *requestContentType</Declaration>
			
			
			<Anchor>//api/name/requestContentType</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/requestContentType</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *requestContentType</Declaration>
			
			
			<Anchor>//api/name/requestContentType</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/requestContentType</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFRestRequest+Internal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *requestContentType</Declaration>
			
			
			<Anchor>//api/name/requestContentType</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
        
	</File>
</Tokens>