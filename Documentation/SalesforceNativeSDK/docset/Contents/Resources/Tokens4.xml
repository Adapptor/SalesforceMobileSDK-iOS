<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFRestRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFRestRequest</TokenIdentifier>
			<Abstract type="html">Request object used to send a REST request to Salesforce.com</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SFRestAPI</TokenIdentifier>
		
	</RelatedTokens>
	
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setMethod:</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/method</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/method</TokenIdentifier>
			<Abstract type="html">The HTTP method of the request.  See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) SFRestMethod method</Declaration>
			
			
			<Anchor>//api/name/method</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setPath:</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/path</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/path</TokenIdentifier>
			<Abstract type="html">The path of the request.
For instance, &quot;&quot; (empty string), &quot;v22.0/recent&quot;, &quot;v22.0/query&quot;.
Note that the path doesn&apos;t have to start with a &apos;/&apos;. For instance, passing &quot;v22.0/recent&quot; is the same as passing &quot;/v22.0/recent&quot;.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *path</Declaration>
			
			
			<Anchor>//api/name/path</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setQueryParams:</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/queryParams</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/queryParams</TokenIdentifier>
			<Abstract type="html">The query parameters of the request (could be nil).
Note that URL encoding of the parameters will automatically happen when the request is sent.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *queryParams</Declaration>
			
			
			<Anchor>//api/name/queryParams</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setNetworkOperation:</TokenIdentifier>
			<Abstract type="html">Underlying SFNetworkOperation through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFNetworkOperation *networkOperation</Declaration>
			
			
			<Anchor>//api/name/networkOperation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/networkOperation</TokenIdentifier>
			<Abstract type="html">Underlying SFNetworkOperation through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFNetworkOperation *networkOperation</Declaration>
			
			
			<Anchor>//api/name/networkOperation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/networkOperation</TokenIdentifier>
			<Abstract type="html">Underlying SFNetworkOperation through which the network call is carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) SFNetworkOperation *networkOperation</Declaration>
			
			
			<Anchor>//api/name/networkOperation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for this request. Notified of request status.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak) id&lt;SFRestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setEndpoint:</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/endpoint</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/endpoint</TokenIdentifier>
			<Abstract type="html">Typically kSFDefaultRestEndpoint but you may use eg custom Apex endpoints</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *endpoint</Declaration>
			
			
			<Anchor>//api/name/endpoint</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/setParseResponse:</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/parseResponse</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFRestRequest/parseResponse</TokenIdentifier>
			<Abstract type="html">Whether or not to parse the response data as structured JSON data.  Defaults to YES. If
set to NO, response data will be returned as binary data in an NSData object.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL parseResponse</Declaration>
			
			
			<Anchor>//api/name/parseResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/send:</TokenIdentifier>
			<Abstract type="html">Send request using specified network engine
@param networkEngine
Returns the SFNetworkOperation through which the network call is actually carried out</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>- (SFNetworkOperation *)send:(SFNetworkEngine *)networkEngine</Declaration>
			
			
			<Anchor>//api/name/send:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/cancel</TokenIdentifier>
			<Abstract type="html">Cancels this request if it is running</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFRestRequest/addPostFileData:paramName:fileName:mimeType:</TokenIdentifier>
			<Abstract type="html">Add file to upload</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>- (void)addPostFileData:(NSData *)fileData paramName:(NSString *)paramName fileName:(NSString *)fileName mimeType:(NSString *)mimeType</Declaration>
			
			
			<Anchor>//api/name/addPostFileData:paramName:fileName:mimeType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFRestRequest/requestWithMethod:path:queryParams:</TokenIdentifier>
			<Abstract type="html">Creates an SFRestRequest object. See SFRestMethod.</Abstract>
			<DeclaredIn>SFRestRequest.h</DeclaredIn>			
			
			<Declaration>+ (id)requestWithMethod:(SFRestMethod)method path:(NSString *)path queryParams:(NSDictionary *)queryParams</Declaration>
			<Parameters>
				<Parameter>
					<Name>method</Name>
					<Abstract type="html">the HTTP method</Abstract>
				</Parameter><Parameter>
					<Name>path</Name>
					<Abstract type="html">the request path</Abstract>
				</Parameter><Parameter>
					<Name>queryParams</Name>
					<Abstract type="html">the parameters of the request (could be nil)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/requestWithMethod:path:queryParams:</Anchor>
		</Token>
		
	</File>
</Tokens>