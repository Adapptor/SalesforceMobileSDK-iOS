<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFMobileSyncSyncManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFMobileSyncSyncManager</TokenIdentifier>
			<Abstract type="html">This class provides methods for doing synching records to/from the server from/to the smartstore.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
            
			
			<NodeRef refid="19"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/setStore:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/store</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFMobileSyncSyncManager/store</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/sharedInstance:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing the sync manager instance for the given user. This instance uses the
default store.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance:(SFUserAccount *)user</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">User to which this manager instance&apos;s data is scoped.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstance:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/sharedInstanceForUser:storeName:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing a sync manager based on a user and store name. This instance uses the
store with the given name for the given user.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceForUser:(SFUserAccount *)user storeName:(nullable NSString *)storeName</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">User associated with the store.</Abstract>
				</Parameter><Parameter>
					<Name>storeName</Name>
					<Abstract type="html">Name of the requested store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForUser:storeName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/sharedInstanceForStore:userAccount:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing a sync manager based on user and store name. This instance uses the store
with the given name for the given user.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceForStore:(nullable NSString *)storeName userAccount:(SFUserAccount *)userAccount</Declaration>
			<Parameters>
				<Parameter>
					<Name>storeName</Name>
					<Abstract type="html">Name of the requested store.</Abstract>
				</Parameter><Parameter>
					<Name>userAccount</Name>
					<Abstract type="html">User associated with the store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForStore:userAccount:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/sharedInstanceForStore:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing sync manager instance by SmartStore store.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)sharedInstanceForStore:(SFSmartStore *)store</Declaration>
			<Parameters>
				<Parameter>
					<Name>store</Name>
					<Abstract type="html">SmartStore instance whose sync manager is being requested.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForStore:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/removeSharedInstance:</TokenIdentifier>
			<Abstract type="html">Remove the shared instance associated with the given user.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstance:(SFUserAccount *)user</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">User associated with the store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstance:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/removeSharedInstanceForUser:storeName:</TokenIdentifier>
			<Abstract type="html">Remove the shared instance associated with the given user and store name.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForUser:(SFUserAccount *)user storeName:(nullable NSString *)storeName</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">User associated with the store.</Abstract>
				</Parameter><Parameter>
					<Name>storeName</Name>
					<Abstract type="html">Name of the requested store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForUser:storeName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/removeSharedInstanceForStore:userAccount:</TokenIdentifier>
			<Abstract type="html">Remove the shared instance associated with the given store name and user.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForStore:(nullable NSString *)storeName userAccount:(SFUserAccount *)userAccount</Declaration>
			<Parameters>
				<Parameter>
					<Name>storeName</Name>
					<Abstract type="html">Name of the requested store.</Abstract>
				</Parameter><Parameter>
					<Name>userAccount</Name>
					<Abstract type="html">User associated with the store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForStore:userAccount:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/removeSharedInstanceForStore:</TokenIdentifier>
			<Abstract type="html">Remove the shared instance associated with the specified store.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForStore:(SFSmartStore *)store</Declaration>
			<Parameters>
				<Parameter>
					<Name>store</Name>
					<Abstract type="html">SmartStore instance whose sync manager is to be removed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForStore:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFMobileSyncSyncManager/removeSharedInstances</TokenIdentifier>
			<Abstract type="html">Remove all shared instances.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstances</Declaration>
			
			
			<Anchor>//api/name/removeSharedInstances</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/stop</TokenIdentifier>
			<Abstract type="html">Stop the sync manager.
It can take a while for active syncs to actually stop.
Call isStopped to see if the sync manager is fully paused.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)stop</Declaration>
			
			
			<Anchor>//api/name/stop</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/isStopping</TokenIdentifier>
			<Abstract type="html">YES if a stop was requested but some syncs are still active.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)isStopping</Declaration>
			
			<ReturnValue><Abstract type="html">YES if a stop was requested but some syncs are still active.</Abstract></ReturnValue>
			<Anchor>//api/name/isStopping</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/isStopped</TokenIdentifier>
			<Abstract type="html">YES if a stop was requested and no syncs are still active.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)isStopped</Declaration>
			
			<ReturnValue><Abstract type="html">YES if a stop was requested and no syncs are still active.</Abstract></ReturnValue>
			<Anchor>//api/name/isStopped</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/restart:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Restart this sync manager.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)restart:(BOOL)restartStoppedSyncs updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>restartStoppedSyncs</Name>
					<Abstract type="html">Pass YES to restart all stopped syncs.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Reports any error (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if restarted successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/restart:updateBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/checkAcceptingSyncs:</TokenIdentifier>
			<Abstract type="html">Check whether a sync manager is running.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)checkAcceptingSyncs:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">Reports any error (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the sync manager is running, or NO if it&apos;s stopping or stopped.</Abstract></ReturnValue>
			<Anchor>//api/name/checkAcceptingSyncs:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/getSyncStatus:</TokenIdentifier>
			<Abstract type="html">Return status of the sync with the given sync ID.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)getSyncStatus:(NSNumber *)syncId</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSyncStatus:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/getSyncStatusByName:</TokenIdentifier>
			<Abstract type="html">Return status of the sync with the given name.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)getSyncStatusByName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSyncStatusByName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/hasSyncWithName:</TokenIdentifier>
			<Abstract type="html">Return YES if a sync with the given name exists.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)hasSyncWithName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES a sync with the given name exists.</Abstract></ReturnValue>
			<Anchor>//api/name/hasSyncWithName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/deleteSyncById:</TokenIdentifier>
			<Abstract type="html">Delete the sync with the given ID.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)deleteSyncById:(NSNumber *)syncId</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSyncById:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/deleteSyncByName:</TokenIdentifier>
			<Abstract type="html">Delete the sync with the given name.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)deleteSyncByName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSyncByName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/createSyncDown:options:soupName:syncName:</TokenIdentifier>
			<Abstract type="html">Create a sync down without running it.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (SFSyncState *)createSyncDown:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync down.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Name for this sync (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync down.</Abstract></ReturnValue>
			<Anchor>//api/name/createSyncDown:options:soupName:syncName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncDownWithTarget:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Create and run a sync down that overwrites modified records.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:soupName:updateBlock:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncDownWithTarget:options:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Create and run a sync down.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync down target that manages the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync down. Use this parameter to specify how the sync
should handle modified records in the store.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:options:soupName:updateBlock:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncDownWithTarget:options:soupName:syncName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Create and run a named sync down.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync down. Use this parameter to specify how the sync
should handle modified records in the store.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be created.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:options:soupName:syncName:updateBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/reSync:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Perform a resync.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSync:(NSNumber *)syncId updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be started.</Abstract></ReturnValue>
			<Anchor>//api/name/reSync:updateBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/reSyncByName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Perform a resync by name.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSyncByName:(NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be started.</Abstract></ReturnValue>
			<Anchor>//api/name/reSyncByName:updateBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/createSyncUp:options:soupName:syncName:</TokenIdentifier>
			<Abstract type="html">Create a sync up without running it.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (SFSyncState *)createSyncUp:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync up. Use this parameter to specify how the sync
should handle modified records on the server.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Name for this sync.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync up.</Abstract></ReturnValue>
			<Anchor>//api/name/createSyncUp:options:soupName:syncName:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncUpWithOptions:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Create and run a sync up with the default SFSyncUpTarget.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithOptions:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync up. Use this parameter to specify how the sync
should handle modified records on the server.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithOptions:soupName:updateBlock:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncUpWithTarget:options:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Create and run a sync up with the configured SFSyncUpTarget.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithTarget:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync up. Use this parameter to specify how the sync
should handle modified records on the server.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithTarget:options:soupName:updateBlock:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/syncUpWithTarget:options:soupName:syncName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Create and run a named sync up.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithTarget:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">Sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">Options associated with this sync up. Use this parameter to specify how the sync
should handle modified records on the server.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">Soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">Block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be created.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Sync state associated with this sync, or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithTarget:options:soupName:syncName:updateBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/cleanResyncGhosts:completionStatusBlock:error:</TokenIdentifier>
			<Abstract type="html">Remove local copies of records that have been deleted on the server
or do not match the query results on the server anymore.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)cleanResyncGhosts:(NSNumber *)syncId completionStatusBlock:(SFSyncSyncManagerCompletionStatusBlock)completionStatusBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>completionStatusBlock</Name>
					<Abstract type="html">Completion status block.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if clean operation could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if cleanResyncGhosts started successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/cleanResyncGhosts:completionStatusBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/cleanResyncGhostsByName:completionStatusBlock:error:</TokenIdentifier>
			<Abstract type="html">Remove local copies of records that have been deleted on the server
or do not match the query results on the server anymore.</Abstract>
			<DeclaredIn>SFMobileSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)cleanResyncGhostsByName:(NSString *)syncName completionStatusBlock:(SFSyncSyncManagerCompletionStatusBlock)completionStatusBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync Name.</Abstract>
				</Parameter><Parameter>
					<Name>completionStatusBlock</Name>
					<Abstract type="html">Completion status block.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if clean operation could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if cleanResyncGhosts started successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/cleanResyncGhostsByName:completionStatusBlock:error:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/addToActiveSyncs:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFMobileSyncSyncManager+SFSyncTask.h</DeclaredIn>
			
			<Declaration>- (void)addToActiveSyncs:(SFSyncTask *)syncTask</Declaration>
			
			
			<Anchor>//api/name/addToActiveSyncs:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFMobileSyncSyncManager/removeFromActiveSyncs:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFMobileSyncSyncManager+SFSyncTask.h</DeclaredIn>
			
			<Declaration>- (void)removeFromActiveSyncs:(SFSyncTask *)syncTask</Declaration>
			
			
			<Anchor>//api/name/removeFromActiveSyncs:</Anchor>
            <NodeRef refid="19"/>
		</Token>
		
        
        
	</File>
</Tokens>